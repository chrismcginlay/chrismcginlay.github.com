{"name":"Chris McGinlay","tagline":"Python, Django, microcontrollers, machine learning.","google":"UA-37447450-1","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"### Welcome\r\nThis is my personal page, where I have gathered together links to various technical projects I am involved in and to courses I have studied.\r\n\r\n###Software Debugging\r\nIn December 2012 I completed a Udacity.com course on automated debugging techniques.\r\nThe course explores the systematic, effective and automatic debugging of large programs, taught using Python. I created and shared a set of summary notes after the course.\r\n* [Summary Notes, by C. McGinlay](https://docs.google.com/document/pub?id=1jesnYtfsVsnNPA3rSwmMC6vEh3k-F099b9tCD0UTl_I)\r\n* [CS259 Software Debugging by Andreas Zeller and Gundega Dekena](http://www.udacity.com/overview/Course/cs259)\r\n\r\n###Microcontrollers and Robotics\r\nTo date I have worked exclusively with the [Arduino UNO](http://www.arduino.cc/en/Main/arduinoBoardUno) micro-controller. Projects brought to operational stage have included:\r\n* Line following buggy. [Stills](https://plus.google.com/photos/110075889815392203358/albums/5830505100129715073?authkey=CL6ys7nOwZyIXw)\r\n* Electronic die. [Code repository](https://github.com/chrismcginlay/ucontrol) | [Stills+Video](https://plus.google.com/photos/110075889815392203358/albums/5830503522515801105?authkey=CMah5u2xmuHGPw)\r\n* Simple robot arm. [Code repository](https://github.com/chrismcginlay/ucontrol) | [Video](http://youtu.be/E9wveX5Kflw)\r\n\r\n###Machine Learning\r\nAt the end of 2011, I completed a coursera.org course \"Machine Learning\", given by Stanford's Professor Andrew Ng.  It covered techniques in data mining, pattern recognition, classification etc; with supervised and unsupervised techniques including SVMs, neural networks, clustering, recommender systems, map-reduce and dimensionality reduction. Coverage was both theoretical and practical, for the latter using the Octave language (numerical computation language similar to Matlab).\r\n\r\n* https://www.coursera.org/course/ml\r\n\r\n###Kaggle.com\r\nAfter completing the Coursera.org machine learning course (see above), I entered two world-wide machine learning competitions on Kaggle.com. I chose Python for these competitions, and used [Scikit-learn](http://scikit-learn.org/stable/) machine learning library for the SVM.\r\n* \"Don't Get Kicked!\" Optimised logistic regression.\r\n* \"Bioresponse\" Partially optimised Support Vector Machine. \r\n* [Kaggle Profile](http://www.kaggle.com/users/26471/grunthus#profile-results)\r\n\r\n###Blender 3D Course Development\r\n\r\n###Lean Launchpad - Eduduck\r\nIn October 2012, I completed a business startup course, given by [Steve Blank](http://steveblank.com/) and hosted on Udacity.com. This explored the fundamental differences between a Startup company and an established company, defining the essential activity of a Startup as a **search** for a repeatable business model. This was a hands-on course; it involved speaking to members of the public to test ideas. Everything was backed up with formal analysis. Really enjoyable delivery by Steve Blank, full of enthusiasm, totally recommendable to anyone.\r\nFollowing on from the course, I have continued to research an online education business model, with the working title of 'EduDuck'. This is hosted on github via @mrintegrity, who is involved in model discovery and exploration.\r\n* [EP245 How to Build a Startup](http://www.udacity.com/overview/Course/ep245/CourseRev/1)\r\n* [Business Model Generation](http://www.businessmodelgeneration.com/canvas) - technique used.\r\n\r\n* [EduDuck - Business Model Canvas exploration](www.eduduck.com)\r\n* [GitHub private repo](https://github.com/mrintegrity/eduduck)\r\n\r\n###Miscellaneous\r\n\r\n* Play Chess Time [Android](https://play.google.com/store/apps/details?id=com.haptic.chesstime&hl=en) | [iOS](https://itunes.apple.com/gb/app/chess-time-multiplayer-game/id455602152?mt=8) My username is ChrisMc\r\n"}